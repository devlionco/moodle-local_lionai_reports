define("local_lionai_reports/main",["exports","core/ajax","core/notification","core/templates","./report","./spinneroverlay"],(function(_exports,_ajax,_notification,_templates,LionAiReport,_spinneroverlay){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript to initialise the main function.
   *
   * @module     local_lionai_reports/main
   * @package    local_lionai_reports
   * @copyright  2023 Devlion.co <info@devlion.co>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_templates=_interopRequireDefault(_templates),LionAiReport=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(LionAiReport),_spinneroverlay=_interopRequireDefault(_spinneroverlay);var SELECTORS_MAINELEMENT="lionai_reports-area";_exports.init=async id=>{if(_spinneroverlay.default.initspinneroverlay(),_spinneroverlay.default.showspinneroverlay(),0==id){(listData=>{listData=JSON.parse(listData),_templates.default.render("local_lionai_reports/list",listData).then((function(html,js){_templates.default.appendNodeContents(document.getElementById(SELECTORS_MAINELEMENT),html,js),_spinneroverlay.default.hidespinneroverlay()})).catch((error=>(0,_notification.exception)(error)))})((await _ajax.default.call([{methodname:"local_lionai_reports_getlist",args:{}}])[0]).data)}0!=id&&LionAiReport.init(id)}}));

//# sourceMappingURL=main.min.js.map